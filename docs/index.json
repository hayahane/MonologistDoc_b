{
  "api/Monologist.KRCC.CheckColliderValid.html": {
    "href": "api/Monologist.KRCC.CheckColliderValid.html",
    "title": "Delegate CheckColliderValid | Monologist Pack",
    "keywords": "Delegate CheckColliderValid Default check if a collider is valid Namespace: Monologist.KRCC Assembly: Monologist.KRCC.dll Syntax public delegate bool CheckColliderValid(Collider coll) Parameters Type Name Description UnityEngine.Collider coll Returns Type Description bool"
  },
  "api/Monologist.KRCC.html": {
    "href": "api/Monologist.KRCC.html",
    "title": "Namespace Monologist.KRCC | Monologist Pack",
    "keywords": "Namespace Monologist.KRCC Classes KinematicRigidbodyCharacterController MovingPlatform Delegates CheckColliderValid Default check if a collider is valid"
  },
  "api/Monologist.KRCC.KinematicRigidbodyCharacterController.html": {
    "href": "api/Monologist.KRCC.KinematicRigidbodyCharacterController.html",
    "title": "Class KinematicRigidbodyCharacterController | Monologist Pack",
    "keywords": "Class KinematicRigidbodyCharacterController Inheritance object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour KinematicRigidbodyCharacterController Inherited Members UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.Invoke(string, float) UnityEngine.MonoBehaviour.InvokeRepeating(string, float, float) UnityEngine.MonoBehaviour.CancelInvoke(string) UnityEngine.MonoBehaviour.IsInvoking(string) UnityEngine.MonoBehaviour.StartCoroutine(string) UnityEngine.MonoBehaviour.StartCoroutine(string, object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopCoroutine(string) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(object) UnityEngine.MonoBehaviour.destroyCancellationToken UnityEngine.MonoBehaviour.useGUILayout UnityEngine.MonoBehaviour.runInEditMode UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.TryGetComponent(System.Type, out UnityEngine.Component) UnityEngine.Component.TryGetComponent<T>(out T) UnityEngine.Component.GetComponent(string) UnityEngine.Component.GetComponentInChildren(System.Type, bool) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>(bool) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentsInChildren(System.Type, bool) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren<T>(bool) UnityEngine.Component.GetComponentsInChildren<T>(bool, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type, bool) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>(bool) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type, bool) UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent<T>(bool) UnityEngine.Component.GetComponentsInParent<T>(bool, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(string) UnityEngine.Component.SendMessageUpwards(string, object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(string, object) UnityEngine.Component.SendMessageUpwards(string) UnityEngine.Component.SendMessageUpwards(string, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(string, object) UnityEngine.Component.SendMessage(string) UnityEngine.Component.SendMessage(string, object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(string, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(string, object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(string, object) UnityEngine.Component.BroadcastMessage(string) UnityEngine.Component.BroadcastMessage(string, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, bool) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) UnityEngine.Object.Destroy(UnityEngine.Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.ToString() UnityEngine.Object.name UnityEngine.Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Monologist.KRCC Assembly: Monologist.KRCC.dll Syntax [AddComponentMenu(\"Physics/KRCC/Kinematic Rigidbody CC\")] [RequireComponent(typeof(Rigidbody))] [RequireComponent(typeof(CapsuleCollider))] public class KinematicRigidbodyCharacterController : MonoBehaviour Fields | Improve this Doc View Source affectCharacterVelocity Dose rigidbody collision affect character velocity. Declaration public bool affectCharacterVelocity Field Value Type Description bool | Improve this Doc View Source energyLossFactor Determines how much energy lost when collided. 1 means absolute elastic collision. Declaration [Range(0, 1)] public float energyLossFactor Field Value Type Description float | Improve this Doc View Source gravity Default gravity. Will not imply automatic. Declaration public Vector3 gravity Field Value Type Description UnityEngine.Vector3 | Improve this Doc View Source groundLayer Declaration public LayerMask groundLayer Field Value Type Description UnityEngine.LayerMask | Improve this Doc View Source interactLayer Declaration public LayerMask interactLayer Field Value Type Description UnityEngine.LayerMask | Improve this Doc View Source maxIterations Declaration public int maxIterations Field Value Type Description int | Improve this Doc View Source maxSlopeAngle Max slope angle controller can climb. Declaration [Range(0, 90)] public float maxSlopeAngle Field Value Type Description float | Improve this Doc View Source maxStepHeight Max height character can step onto. Declaration [Min(0.1)] public float maxStepHeight Field Value Type Description float | Improve this Doc View Source pushRigidbody Enable handling rigidbody pushing. Declaration public bool pushRigidbody Field Value Type Description bool | Improve this Doc View Source snapGround Enable snapping to the ground. Declaration public bool snapGround Field Value Type Description bool | Improve this Doc View Source solveSlide Enable sliding against wall. Declaration public bool solveSlide Field Value Type Description bool | Improve this Doc View Source solveSlope Enable slope solving. Declaration public bool solveSlope Field Value Type Description bool | Improve this Doc View Source solveStepping Enable stepping. Declaration public bool solveStepping Field Value Type Description bool Properties | Improve this Doc View Source CapsuleHeight Height of controller's capsule shape. Declaration public float CapsuleHeight { get; } Property Value Type Description float | Improve this Doc View Source CapsuleRadius Radius of controller's capsule shape. Declaration public float CapsuleRadius { get; } Property Value Type Description float | Improve this Doc View Source CharacterPosition Character controller's current position. Declaration public Vector3 CharacterPosition { get; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source CharacterRotation Character controller's current rotation. Declaration public Quaternion CharacterRotation { get; } Property Value Type Description UnityEngine.Quaternion | Improve this Doc View Source CharacterUp Character controller's current up-axis. Declaration public Vector3 CharacterUp { get; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source CurrentVelocity Current character velocity, calculated using (currentPos - previousPos) / fixed delta time. Declaration public Vector3 CurrentVelocity { get; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source IsGrounded Declaration public bool IsGrounded { get; } Property Value Type Description bool Methods | Improve this Doc View Source AttachToMovingPlatform(Transform) Attach this character controller to a moving platform. Declaration public void AttachToMovingPlatform(Transform platform) Parameters Type Name Description UnityEngine.Transform platform Transform of the moving platform. | Improve this Doc View Source CharacterOverlap(Vector3, Quaternion, LayerMask, Collider[], float) Overlap character capsule to get collided collider. Declaration public int CharacterOverlap(Vector3 position, Quaternion rotation, LayerMask queryLayer, Collider[] colliders, float overlapDetectionExtend = 0) Parameters Type Name Description UnityEngine.Vector3 position Overlap capsule position. UnityEngine.Quaternion rotation Overlap capsule position. UnityEngine.LayerMask queryLayer LayerMask to query collision. UnityEngine.Collider[] colliders Collider cache. float overlapDetectionExtend Extend capsule size to get a larger detection (usually not used). Returns Type Description int Count of colliders. | Improve this Doc View Source CharacterRaycast(Vector3, Vector3, float, out RaycastHit, LayerMask, RaycastHit[], CheckColliderValid) Raycast test on certain direction. Declaration public int CharacterRaycast(Vector3 position, Vector3 direction, float distance, out RaycastHit closetHit, LayerMask queryLayer, RaycastHit[] hits, CheckColliderValid checkColliderValid) Parameters Type Name Description UnityEngine.Vector3 position Ray start point. UnityEngine.Vector3 direction Raycast direction. float distance Raycast distance. UnityEngine.RaycastHit closetHit Closet raycastHit information. UnityEngine.LayerMask queryLayer LayerMask to query collision. UnityEngine.RaycastHit[] hits Raycast hits cache. CheckColliderValid checkColliderValid Delegate to define if a collider is valid. Returns Type Description int Count of raycast hits. | Improve this Doc View Source CharacterSweepTest(Vector3, Quaternion, Vector3, float, out bool, out RaycastHit, LayerMask, RaycastHit[], CheckColliderValid) Capsule sweep test on certain direction. Declaration public int CharacterSweepTest(Vector3 position, Quaternion rotation, Vector3 direction, float distance, out bool isStartPenetrated, out RaycastHit closetHitInfo, LayerMask queryLayer, RaycastHit[] sweepHits, CheckColliderValid checkColliderValid) Parameters Type Name Description UnityEngine.Vector3 position Sweep test start position. UnityEngine.Quaternion rotation Capsule rotation. UnityEngine.Vector3 direction Sweep test direction. float distance Sweep test distance. bool isStartPenetrated Return if the character is penetrated with colliders at the sweep start. UnityEngine.RaycastHit closetHitInfo Returns information of the closet hit. UnityEngine.LayerMask queryLayer LayerMask to query collision. UnityEngine.RaycastHit[] sweepHits Sweep hits cache. CheckColliderValid checkColliderValid Delegate to define if a collider is valid. Returns Type Description int Count of hits. | Improve this Doc View Source DetachFromMovingPlatform() Detach this character controller from a moving platform, which means not to move along with or rotate with it. Declaration public void DetachFromMovingPlatform() | Improve this Doc View Source MoveByVelocity(Vector3) Set character movement by velocity, which means the motion will be velocity multiply fixed delta time. Declaration public void MoveByVelocity(Vector3 velocity) Parameters Type Name Description UnityEngine.Vector3 velocity Given velocity for moving the character controller. | Improve this Doc View Source MoveRotation(Quaternion) Set directly the rotation, calculate rotation outside the controller. Declaration public void MoveRotation(Quaternion rot) Parameters Type Name Description UnityEngine.Quaternion rot Character rotation. | Improve this Doc View Source SetPosition(Vector3) Set character position directly NOTE: This method will not affect character velocity. Declaration public void SetPosition(Vector3 position) Parameters Type Name Description UnityEngine.Vector3 position Target position. | Improve this Doc View Source SetRotation(Quaternion) Set character rotation directly (not using Rigidbody.MoveRotation()). NOTE: This method will not affect character velocity. Declaration public void SetRotation(Quaternion rotation) Parameters Type Name Description UnityEngine.Quaternion rotation Target rotation."
  },
  "api/Monologist.KRCC.MovingPlatform.html": {
    "href": "api/Monologist.KRCC.MovingPlatform.html",
    "title": "Class MovingPlatform | Monologist Pack",
    "keywords": "Class MovingPlatform Inheritance object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour MovingPlatform Inherited Members UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.Invoke(string, float) UnityEngine.MonoBehaviour.InvokeRepeating(string, float, float) UnityEngine.MonoBehaviour.CancelInvoke(string) UnityEngine.MonoBehaviour.IsInvoking(string) UnityEngine.MonoBehaviour.StartCoroutine(string) UnityEngine.MonoBehaviour.StartCoroutine(string, object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopCoroutine(string) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(object) UnityEngine.MonoBehaviour.destroyCancellationToken UnityEngine.MonoBehaviour.useGUILayout UnityEngine.MonoBehaviour.runInEditMode UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.TryGetComponent(System.Type, out UnityEngine.Component) UnityEngine.Component.TryGetComponent<T>(out T) UnityEngine.Component.GetComponent(string) UnityEngine.Component.GetComponentInChildren(System.Type, bool) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>(bool) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentsInChildren(System.Type, bool) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren<T>(bool) UnityEngine.Component.GetComponentsInChildren<T>(bool, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type, bool) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>(bool) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type, bool) UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent<T>(bool) UnityEngine.Component.GetComponentsInParent<T>(bool, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(string) UnityEngine.Component.SendMessageUpwards(string, object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(string, object) UnityEngine.Component.SendMessageUpwards(string) UnityEngine.Component.SendMessageUpwards(string, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(string, object) UnityEngine.Component.SendMessage(string) UnityEngine.Component.SendMessage(string, object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(string, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(string, object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(string, object) UnityEngine.Component.BroadcastMessage(string) UnityEngine.Component.BroadcastMessage(string, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, bool) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, bool) UnityEngine.Object.Destroy(UnityEngine.Object, float) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, bool) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfType(System.Type, bool) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsByType(System.Type, UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, float) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectsOfType<T>(bool) UnityEngine.Object.FindObjectsByType<T>(UnityEngine.FindObjectsInactive, UnityEngine.FindObjectsSortMode) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(bool) UnityEngine.Object.FindFirstObjectByType<T>() UnityEngine.Object.FindAnyObjectByType<T>() UnityEngine.Object.FindFirstObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType<T>(UnityEngine.FindObjectsInactive) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindFirstObjectByType(System.Type) UnityEngine.Object.FindAnyObjectByType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, bool) UnityEngine.Object.FindFirstObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.FindAnyObjectByType(System.Type, UnityEngine.FindObjectsInactive) UnityEngine.Object.ToString() UnityEngine.Object.name UnityEngine.Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Monologist.KRCC Assembly: Monologist.KRCC.dll Syntax [AddComponentMenu(\"Physics/KRCC/Moving Platform\")] [RequireComponent(typeof(BoxCollider))] [RequireComponent(typeof(Rigidbody))] public class MovingPlatform : MonoBehaviour"
  },
  "index.html": {
    "href": "index.html",
    "title": "| Monologist Pack",
    "keywords": "Using Monologist { // Time to make something Console . Log ( \"Hello,Gamer!\" ); }"
  },
  "manual/KRCC_Manual.html": {
    "href": "manual/KRCC_Manual.html",
    "title": "Intro | Monologist Pack",
    "keywords": "Intro KRCC (Kinematic Rigidbody Character Controller)是一种给予动力学并含有刚体互动的角色控制。实现了以下功能 上下坡移动 台阶移动 沿墙移动时滑行 地面检测（贴合地面） 移动平台 可互动刚体交互 包含了以下组件: Kinematic Rigidbody Character Controller Moving Platform Kinematic Rigidbody CC KRCC 依赖 Rigidbody 以及 Capsule 组件, 并保持 Rigidbody 的 isKinematic 和 UseGravity 属性为 false. KRCC 本身依靠 Collide and Slide 算法实现，其本质是在单位事件内进行多次位移来适应复杂的地形，在平滑移动和控制方面相对于单纯的 Rigidbody 拥有绝对的优势。 同时该组件集成了对于移动平台（MovingPlatform）的支持，模拟了真实的物理碰撞。 同时位移时考虑了 ContactOffset, 意味着可以像寻常物理组件一样执行碰撞检测。 面板属性 属性名称 描述 Max Iterations FixedUpdate 帧内最迭次数 Max Step Height 最大步进高度 Max Slope Angle 最大可攀爬坡度 Energy Loss Factor 碰撞时能量损失系数, 为0时损失最大 Gravity 默认重力，不会被自行调用，需要在操控脚本中自行调用计算 Ground Layer 地形检测 LayerMask Interact Layer 互动刚体 LayerMask Moving Platform Moving Platform 依赖两个 BoxCollider 和 Rigidbody 组件运作。 一个碰撞箱用于碰撞，而另一个碰撞箱作为触发器将 KRCC 附加到该移动平台上进行移动，为保证安全， 触发器需要稍稍超出 需要站立的平面一些。 Rigidbody 需保持动力学状态，用来和其他动态刚体组件产生正确的交互。"
  }
}