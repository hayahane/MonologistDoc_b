### YamlMime:ManagedReference
items:
- uid: Monologist.Patterns.State.StateMachine
  commentId: T:Monologist.Patterns.State.StateMachine
  id: StateMachine
  parent: Monologist.Patterns.State
  children:
  - Monologist.Patterns.State.StateMachine.CurrentState
  - Monologist.Patterns.State.StateMachine.FixedUpdate
  - Monologist.Patterns.State.StateMachine.TransitTo(Monologist.Patterns.State.IState)
  - Monologist.Patterns.State.StateMachine.Update
  langs:
  - csharp
  - vb
  name: StateMachine
  nameWithType: StateMachine
  fullName: Monologist.Patterns.State.StateMachine
  type: Class
  source:
    remote:
      path: Assets/Scripts/Patterns/StateMachine/StateMachine.cs
      branch: feature/basic_movement
      repo: git@github.com:MonologistGames/Bartender.git
    id: StateMachine
    path: ../Bartender/Assets/Scripts/Patterns/StateMachine/StateMachine.cs
    startLine: 6
  assemblies:
  - Monologist.Patterns
  namespace: Monologist.Patterns.State
  syntax:
    content: public class StateMachine
    content.vb: Public Class StateMachine
  inheritance:
  - System.Object
  derivedClasses:
  - Monologist.PlayerCharacter.Movement.MoveStateMachine
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Monologist.Patterns.State.StateMachine.CurrentState
  commentId: P:Monologist.Patterns.State.StateMachine.CurrentState
  id: CurrentState
  parent: Monologist.Patterns.State.StateMachine
  langs:
  - csharp
  - vb
  name: CurrentState
  nameWithType: StateMachine.CurrentState
  fullName: Monologist.Patterns.State.StateMachine.CurrentState
  type: Property
  source:
    remote:
      path: Assets/Scripts/Patterns/StateMachine/StateMachine.cs
      branch: feature/basic_movement
      repo: git@github.com:MonologistGames/Bartender.git
    id: CurrentState
    path: ../Bartender/Assets/Scripts/Patterns/StateMachine/StateMachine.cs
    startLine: 8
  assemblies:
  - Monologist.Patterns
  namespace: Monologist.Patterns.State
  syntax:
    content: public IState CurrentState { get; }
    parameters: []
    return:
      type: Monologist.Patterns.State.IState
    content.vb: Public Property CurrentState As IState
  overload: Monologist.Patterns.State.StateMachine.CurrentState*
- uid: Monologist.Patterns.State.StateMachine.TransitTo(Monologist.Patterns.State.IState)
  commentId: M:Monologist.Patterns.State.StateMachine.TransitTo(Monologist.Patterns.State.IState)
  id: TransitTo(Monologist.Patterns.State.IState)
  parent: Monologist.Patterns.State.StateMachine
  langs:
  - csharp
  - vb
  name: TransitTo(IState)
  nameWithType: StateMachine.TransitTo(IState)
  fullName: Monologist.Patterns.State.StateMachine.TransitTo(Monologist.Patterns.State.IState)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Patterns/StateMachine/StateMachine.cs
      branch: feature/basic_movement
      repo: git@github.com:MonologistGames/Bartender.git
    id: TransitTo
    path: ../Bartender/Assets/Scripts/Patterns/StateMachine/StateMachine.cs
    startLine: 10
  assemblies:
  - Monologist.Patterns
  namespace: Monologist.Patterns.State
  syntax:
    content: public void TransitTo(IState nextState)
    parameters:
    - id: nextState
      type: Monologist.Patterns.State.IState
    content.vb: Public Sub TransitTo(nextState As IState)
  overload: Monologist.Patterns.State.StateMachine.TransitTo*
- uid: Monologist.Patterns.State.StateMachine.Update
  commentId: M:Monologist.Patterns.State.StateMachine.Update
  id: Update
  parent: Monologist.Patterns.State.StateMachine
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: StateMachine.Update()
  fullName: Monologist.Patterns.State.StateMachine.Update()
  type: Method
  source:
    remote:
      path: Assets/Scripts/Patterns/StateMachine/StateMachine.cs
      branch: feature/basic_movement
      repo: git@github.com:MonologistGames/Bartender.git
    id: Update
    path: ../Bartender/Assets/Scripts/Patterns/StateMachine/StateMachine.cs
    startLine: 17
  assemblies:
  - Monologist.Patterns
  namespace: Monologist.Patterns.State
  syntax:
    content: public void Update()
    content.vb: Public Sub Update()
  overload: Monologist.Patterns.State.StateMachine.Update*
- uid: Monologist.Patterns.State.StateMachine.FixedUpdate
  commentId: M:Monologist.Patterns.State.StateMachine.FixedUpdate
  id: FixedUpdate
  parent: Monologist.Patterns.State.StateMachine
  langs:
  - csharp
  - vb
  name: FixedUpdate()
  nameWithType: StateMachine.FixedUpdate()
  fullName: Monologist.Patterns.State.StateMachine.FixedUpdate()
  type: Method
  source:
    remote:
      path: Assets/Scripts/Patterns/StateMachine/StateMachine.cs
      branch: feature/basic_movement
      repo: git@github.com:MonologistGames/Bartender.git
    id: FixedUpdate
    path: ../Bartender/Assets/Scripts/Patterns/StateMachine/StateMachine.cs
    startLine: 22
  assemblies:
  - Monologist.Patterns
  namespace: Monologist.Patterns.State
  syntax:
    content: public void FixedUpdate()
    content.vb: Public Sub FixedUpdate()
  overload: Monologist.Patterns.State.StateMachine.FixedUpdate*
references:
- uid: Monologist.Patterns.State
  commentId: N:Monologist.Patterns.State
  name: Monologist.Patterns.State
  nameWithType: Monologist.Patterns.State
  fullName: Monologist.Patterns.State
  spec.csharp:
  - uid: Monologist
    name: Monologist
  - name: .
  - uid: Monologist.Patterns
    name: Patterns
  - name: .
  - uid: Monologist.Patterns.State
    name: State
  spec.vb:
  - uid: Monologist
    name: Monologist
  - name: .
  - uid: Monologist.Patterns
    name: Patterns
  - name: .
  - uid: Monologist.Patterns.State
    name: State
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Monologist.Patterns.State.StateMachine.CurrentState*
  commentId: Overload:Monologist.Patterns.State.StateMachine.CurrentState
  name: CurrentState
  nameWithType: StateMachine.CurrentState
  fullName: Monologist.Patterns.State.StateMachine.CurrentState
- uid: Monologist.Patterns.State.IState
  commentId: T:Monologist.Patterns.State.IState
  parent: Monologist.Patterns.State
  name: IState
  nameWithType: IState
  fullName: Monologist.Patterns.State.IState
- uid: Monologist.Patterns.State.StateMachine.TransitTo*
  commentId: Overload:Monologist.Patterns.State.StateMachine.TransitTo
  name: TransitTo
  nameWithType: StateMachine.TransitTo
  fullName: Monologist.Patterns.State.StateMachine.TransitTo
- uid: Monologist.Patterns.State.StateMachine.Update*
  commentId: Overload:Monologist.Patterns.State.StateMachine.Update
  name: Update
  nameWithType: StateMachine.Update
  fullName: Monologist.Patterns.State.StateMachine.Update
- uid: Monologist.Patterns.State.StateMachine.FixedUpdate*
  commentId: Overload:Monologist.Patterns.State.StateMachine.FixedUpdate
  name: FixedUpdate
  nameWithType: StateMachine.FixedUpdate
  fullName: Monologist.Patterns.State.StateMachine.FixedUpdate
