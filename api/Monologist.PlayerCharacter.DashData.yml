### YamlMime:ManagedReference
items:
- uid: Monologist.PlayerCharacter.DashData
  commentId: T:Monologist.PlayerCharacter.DashData
  id: DashData
  parent: Monologist.PlayerCharacter
  children:
  - Monologist.PlayerCharacter.DashData.dashCD
  - Monologist.PlayerCharacter.DashData.dashDistance
  - Monologist.PlayerCharacter.DashData.dashTime
  langs:
  - csharp
  - vb
  name: DashData
  nameWithType: DashData
  fullName: Monologist.PlayerCharacter.DashData
  type: Class
  source:
    remote:
      path: Assets/Scripts/PlayerCharacter/Scripts/PlayerControllerData.cs
      branch: feature/basic_movement
      repo: git@github.com:MonologistGames/Bartender.git
    id: DashData
    path: ../Assets/Scripts/PlayerCharacter/Scripts/PlayerControllerData.cs
    startLine: 35
  assemblies:
  - Monologist.PlayerCharacter
  namespace: Monologist.PlayerCharacter
  syntax:
    content: >-
      [Serializable]

      public class DashData
    content.vb: >-
      <Serializable>

      Public Class DashData
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: Monologist.PlayerCharacter.DashData.dashDistance
  commentId: F:Monologist.PlayerCharacter.DashData.dashDistance
  id: dashDistance
  parent: Monologist.PlayerCharacter.DashData
  langs:
  - csharp
  - vb
  name: dashDistance
  nameWithType: DashData.dashDistance
  fullName: Monologist.PlayerCharacter.DashData.dashDistance
  type: Field
  source:
    remote:
      path: Assets/Scripts/PlayerCharacter/Scripts/PlayerControllerData.cs
      branch: feature/basic_movement
      repo: git@github.com:MonologistGames/Bartender.git
    id: dashDistance
    path: ../Assets/Scripts/PlayerCharacter/Scripts/PlayerControllerData.cs
    startLine: 38
  assemblies:
  - Monologist.PlayerCharacter
  namespace: Monologist.PlayerCharacter
  syntax:
    content: >-
      [Min(0)]

      public float dashDistance
    return:
      type: System.Single
    content.vb: >-
      <Min(0)>

      Public dashDistance As Single
  attributes:
  - type: UnityEngine.MinAttribute
    ctor: UnityEngine.MinAttribute.#ctor(System.Single)
    arguments:
    - type: System.Single
      value: 0
- uid: Monologist.PlayerCharacter.DashData.dashTime
  commentId: F:Monologist.PlayerCharacter.DashData.dashTime
  id: dashTime
  parent: Monologist.PlayerCharacter.DashData
  langs:
  - csharp
  - vb
  name: dashTime
  nameWithType: DashData.dashTime
  fullName: Monologist.PlayerCharacter.DashData.dashTime
  type: Field
  source:
    remote:
      path: Assets/Scripts/PlayerCharacter/Scripts/PlayerControllerData.cs
      branch: feature/basic_movement
      repo: git@github.com:MonologistGames/Bartender.git
    id: dashTime
    path: ../Assets/Scripts/PlayerCharacter/Scripts/PlayerControllerData.cs
    startLine: 39
  assemblies:
  - Monologist.PlayerCharacter
  namespace: Monologist.PlayerCharacter
  syntax:
    content: >-
      [Range(0, 0.5)]

      public float dashTime
    return:
      type: System.Single
    content.vb: >-
      <Range(0, 0.5)>

      Public dashTime As Single
  attributes:
  - type: UnityEngine.RangeAttribute
    ctor: UnityEngine.RangeAttribute.#ctor(System.Single,System.Single)
    arguments:
    - type: System.Single
      value: 0
    - type: System.Single
      value: 0.5
- uid: Monologist.PlayerCharacter.DashData.dashCD
  commentId: F:Monologist.PlayerCharacter.DashData.dashCD
  id: dashCD
  parent: Monologist.PlayerCharacter.DashData
  langs:
  - csharp
  - vb
  name: dashCD
  nameWithType: DashData.dashCD
  fullName: Monologist.PlayerCharacter.DashData.dashCD
  type: Field
  source:
    remote:
      path: Assets/Scripts/PlayerCharacter/Scripts/PlayerControllerData.cs
      branch: feature/basic_movement
      repo: git@github.com:MonologistGames/Bartender.git
    id: dashCD
    path: ../Assets/Scripts/PlayerCharacter/Scripts/PlayerControllerData.cs
    startLine: 40
  assemblies:
  - Monologist.PlayerCharacter
  namespace: Monologist.PlayerCharacter
  syntax:
    content: >-
      [Min(0)]

      public float dashCD
    return:
      type: System.Single
    content.vb: >-
      <Min(0)>

      Public dashCD As Single
  attributes:
  - type: UnityEngine.MinAttribute
    ctor: UnityEngine.MinAttribute.#ctor(System.Single)
    arguments:
    - type: System.Single
      value: 0
references:
- uid: Monologist.PlayerCharacter
  commentId: N:Monologist.PlayerCharacter
  name: Monologist.PlayerCharacter
  nameWithType: Monologist.PlayerCharacter
  fullName: Monologist.PlayerCharacter
  spec.csharp:
  - uid: Monologist
    name: Monologist
  - name: .
  - uid: Monologist.PlayerCharacter
    name: PlayerCharacter
  spec.vb:
  - uid: Monologist
    name: Monologist
  - name: .
  - uid: Monologist.PlayerCharacter
    name: PlayerCharacter
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
