### YamlMime:ManagedReference
items:
- uid: Monologist.PlayerCharacter.PlayerControllerData
  commentId: T:Monologist.PlayerCharacter.PlayerControllerData
  id: PlayerControllerData
  parent: Monologist.PlayerCharacter
  children:
  - Monologist.PlayerCharacter.PlayerControllerData.climbData
  - Monologist.PlayerCharacter.PlayerControllerData.dashData
  - Monologist.PlayerCharacter.PlayerControllerData.floatData
  - Monologist.PlayerCharacter.PlayerControllerData.gravity
  - Monologist.PlayerCharacter.PlayerControllerData.walkData
  langs:
  - csharp
  - vb
  name: PlayerControllerData
  nameWithType: PlayerControllerData
  fullName: Monologist.PlayerCharacter.PlayerControllerData
  type: Class
  source:
    remote:
      path: Assets/Scripts/PlayerCharacter/Scripts/PlayerControllerData.cs
      branch: feature/basic_movement
      repo: git@github.com:MonologistGames/Bartender.git
    id: PlayerControllerData
    path: ../Assets/Scripts/PlayerCharacter/Scripts/PlayerControllerData.cs
    startLine: 6
  assemblies:
  - Monologist.PlayerCharacter
  namespace: Monologist.PlayerCharacter
  syntax:
    content: >-
      [Serializable]

      public class PlayerControllerData
    content.vb: >-
      <Serializable>

      Public Class PlayerControllerData
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: Monologist.PlayerCharacter.PlayerControllerData.gravity
  commentId: F:Monologist.PlayerCharacter.PlayerControllerData.gravity
  id: gravity
  parent: Monologist.PlayerCharacter.PlayerControllerData
  langs:
  - csharp
  - vb
  name: gravity
  nameWithType: PlayerControllerData.gravity
  fullName: Monologist.PlayerCharacter.PlayerControllerData.gravity
  type: Field
  source:
    remote:
      path: Assets/Scripts/PlayerCharacter/Scripts/PlayerControllerData.cs
      branch: feature/basic_movement
      repo: git@github.com:MonologistGames/Bartender.git
    id: gravity
    path: ../Assets/Scripts/PlayerCharacter/Scripts/PlayerControllerData.cs
    startLine: 9
  assemblies:
  - Monologist.PlayerCharacter
  namespace: Monologist.PlayerCharacter
  syntax:
    content: public Vector3 gravity
    return:
      type: System.Numerics.Vector3
    content.vb: Public gravity As Vector3
- uid: Monologist.PlayerCharacter.PlayerControllerData.walkData
  commentId: F:Monologist.PlayerCharacter.PlayerControllerData.walkData
  id: walkData
  parent: Monologist.PlayerCharacter.PlayerControllerData
  langs:
  - csharp
  - vb
  name: walkData
  nameWithType: PlayerControllerData.walkData
  fullName: Monologist.PlayerCharacter.PlayerControllerData.walkData
  type: Field
  source:
    remote:
      path: Assets/Scripts/PlayerCharacter/Scripts/PlayerControllerData.cs
      branch: feature/basic_movement
      repo: git@github.com:MonologistGames/Bartender.git
    id: walkData
    path: ../Assets/Scripts/PlayerCharacter/Scripts/PlayerControllerData.cs
    startLine: 10
  assemblies:
  - Monologist.PlayerCharacter
  namespace: Monologist.PlayerCharacter
  syntax:
    content: >-
      [SerializeField]

      public WalkData walkData
    return:
      type: Monologist.PlayerCharacter.WalkData
    content.vb: >-
      <SerializeField>

      Public walkData As WalkData
  attributes:
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
- uid: Monologist.PlayerCharacter.PlayerControllerData.floatData
  commentId: F:Monologist.PlayerCharacter.PlayerControllerData.floatData
  id: floatData
  parent: Monologist.PlayerCharacter.PlayerControllerData
  langs:
  - csharp
  - vb
  name: floatData
  nameWithType: PlayerControllerData.floatData
  fullName: Monologist.PlayerCharacter.PlayerControllerData.floatData
  type: Field
  source:
    remote:
      path: Assets/Scripts/PlayerCharacter/Scripts/PlayerControllerData.cs
      branch: feature/basic_movement
      repo: git@github.com:MonologistGames/Bartender.git
    id: floatData
    path: ../Assets/Scripts/PlayerCharacter/Scripts/PlayerControllerData.cs
    startLine: 11
  assemblies:
  - Monologist.PlayerCharacter
  namespace: Monologist.PlayerCharacter
  syntax:
    content: >-
      [SerializeField]

      public FloatData floatData
    return:
      type: Monologist.PlayerCharacter.FloatData
    content.vb: >-
      <SerializeField>

      Public floatData As FloatData
  attributes:
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
- uid: Monologist.PlayerCharacter.PlayerControllerData.dashData
  commentId: F:Monologist.PlayerCharacter.PlayerControllerData.dashData
  id: dashData
  parent: Monologist.PlayerCharacter.PlayerControllerData
  langs:
  - csharp
  - vb
  name: dashData
  nameWithType: PlayerControllerData.dashData
  fullName: Monologist.PlayerCharacter.PlayerControllerData.dashData
  type: Field
  source:
    remote:
      path: Assets/Scripts/PlayerCharacter/Scripts/PlayerControllerData.cs
      branch: feature/basic_movement
      repo: git@github.com:MonologistGames/Bartender.git
    id: dashData
    path: ../Assets/Scripts/PlayerCharacter/Scripts/PlayerControllerData.cs
    startLine: 12
  assemblies:
  - Monologist.PlayerCharacter
  namespace: Monologist.PlayerCharacter
  syntax:
    content: >-
      [SerializeField]

      public DashData dashData
    return:
      type: Monologist.PlayerCharacter.DashData
    content.vb: >-
      <SerializeField>

      Public dashData As DashData
  attributes:
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
- uid: Monologist.PlayerCharacter.PlayerControllerData.climbData
  commentId: F:Monologist.PlayerCharacter.PlayerControllerData.climbData
  id: climbData
  parent: Monologist.PlayerCharacter.PlayerControllerData
  langs:
  - csharp
  - vb
  name: climbData
  nameWithType: PlayerControllerData.climbData
  fullName: Monologist.PlayerCharacter.PlayerControllerData.climbData
  type: Field
  source:
    remote:
      path: Assets/Scripts/PlayerCharacter/Scripts/PlayerControllerData.cs
      branch: feature/basic_movement
      repo: git@github.com:MonologistGames/Bartender.git
    id: climbData
    path: ../Assets/Scripts/PlayerCharacter/Scripts/PlayerControllerData.cs
    startLine: 13
  assemblies:
  - Monologist.PlayerCharacter
  namespace: Monologist.PlayerCharacter
  syntax:
    content: >-
      [SerializeField]

      public ClimbData climbData
    return:
      type: Monologist.PlayerCharacter.ClimbData
    content.vb: >-
      <SerializeField>

      Public climbData As ClimbData
  attributes:
  - type: UnityEngine.SerializeField
    ctor: UnityEngine.SerializeField.#ctor
    arguments: []
references:
- uid: Monologist.PlayerCharacter
  commentId: N:Monologist.PlayerCharacter
  name: Monologist.PlayerCharacter
  nameWithType: Monologist.PlayerCharacter
  fullName: Monologist.PlayerCharacter
  spec.csharp:
  - uid: Monologist
    name: Monologist
  - name: .
  - uid: Monologist.PlayerCharacter
    name: PlayerCharacter
  spec.vb:
  - uid: Monologist
    name: Monologist
  - name: .
  - uid: Monologist.PlayerCharacter
    name: PlayerCharacter
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Numerics.Vector3
  commentId: T:System.Numerics.Vector3
  parent: System.Numerics
  isExternal: true
  name: Vector3
  nameWithType: Vector3
  fullName: System.Numerics.Vector3
- uid: System.Numerics
  commentId: N:System.Numerics
  isExternal: true
  name: System.Numerics
  nameWithType: System.Numerics
  fullName: System.Numerics
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Numerics
    name: Numerics
    isExternal: true
- uid: Monologist.PlayerCharacter.WalkData
  commentId: T:Monologist.PlayerCharacter.WalkData
  parent: Monologist.PlayerCharacter
  name: WalkData
  nameWithType: WalkData
  fullName: Monologist.PlayerCharacter.WalkData
- uid: Monologist.PlayerCharacter.FloatData
  commentId: T:Monologist.PlayerCharacter.FloatData
  parent: Monologist.PlayerCharacter
  name: FloatData
  nameWithType: FloatData
  fullName: Monologist.PlayerCharacter.FloatData
- uid: Monologist.PlayerCharacter.DashData
  commentId: T:Monologist.PlayerCharacter.DashData
  parent: Monologist.PlayerCharacter
  name: DashData
  nameWithType: DashData
  fullName: Monologist.PlayerCharacter.DashData
- uid: Monologist.PlayerCharacter.ClimbData
  commentId: T:Monologist.PlayerCharacter.ClimbData
  parent: Monologist.PlayerCharacter
  name: ClimbData
  nameWithType: ClimbData
  fullName: Monologist.PlayerCharacter.ClimbData
