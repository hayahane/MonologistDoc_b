### YamlMime:ManagedReference
items:
- uid: Monologist.PlayerCharacter.Movement.IdleState
  commentId: T:Monologist.PlayerCharacter.Movement.IdleState
  id: IdleState
  parent: Monologist.PlayerCharacter.Movement
  children:
  - Monologist.PlayerCharacter.Movement.IdleState.#ctor(Monologist.PlayerCharacter.Movement.MoveStateMachine)
  - Monologist.PlayerCharacter.Movement.IdleState.OnEnter
  - Monologist.PlayerCharacter.Movement.IdleState.Update
  langs:
  - csharp
  - vb
  name: IdleState
  nameWithType: IdleState
  fullName: Monologist.PlayerCharacter.Movement.IdleState
  type: Class
  source:
    remote:
      path: Assets/Scripts/PlayerCharacter/Scripts/Movement/States/OnGroundState/IdleState.cs
      branch: feature/basic_movement
      repo: git@github.com:MonologistGames/Bartender.git
    id: IdleState
    path: ../Assets/Scripts/PlayerCharacter/Scripts/Movement/States/OnGroundState/IdleState.cs
    startLine: 2
  assemblies:
  - Monologist.PlayerCharacter
  namespace: Monologist.PlayerCharacter.Movement
  syntax:
    content: 'public class IdleState : GroundedState, IState'
    content.vb: Public Class IdleState Inherits GroundedState Implements IState
  inheritance:
  - System.Object
  - Bartender.GameLogic.PlayerCharacter.Movement.States.MovementState
  - Monologist.PlayerCharacter.Movement.GroundedState
  implements:
  - Monologist.Patterns.State.IState
  inheritedMembers:
  - Monologist.PlayerCharacter.Movement.GroundedState.BindInputActions
  - Monologist.PlayerCharacter.Movement.GroundedState.CancelInputActions
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Monologist.PlayerCharacter.Movement.IdleState.#ctor(Monologist.PlayerCharacter.Movement.MoveStateMachine)
  commentId: M:Monologist.PlayerCharacter.Movement.IdleState.#ctor(Monologist.PlayerCharacter.Movement.MoveStateMachine)
  id: '#ctor(Monologist.PlayerCharacter.Movement.MoveStateMachine)'
  parent: Monologist.PlayerCharacter.Movement.IdleState
  langs:
  - csharp
  - vb
  name: IdleState(MoveStateMachine)
  nameWithType: IdleState.IdleState(MoveStateMachine)
  fullName: Monologist.PlayerCharacter.Movement.IdleState.IdleState(Monologist.PlayerCharacter.Movement.MoveStateMachine)
  type: Constructor
  source:
    remote:
      path: Assets/Scripts/PlayerCharacter/Scripts/Movement/States/OnGroundState/IdleState.cs
      branch: feature/basic_movement
      repo: git@github.com:MonologistGames/Bartender.git
    id: .ctor
    path: ../Assets/Scripts/PlayerCharacter/Scripts/Movement/States/OnGroundState/IdleState.cs
    startLine: 4
  assemblies:
  - Monologist.PlayerCharacter
  namespace: Monologist.PlayerCharacter.Movement
  syntax:
    content: public IdleState(MoveStateMachine stateMachine)
    parameters:
    - id: stateMachine
      type: Monologist.PlayerCharacter.Movement.MoveStateMachine
    content.vb: Public Sub New(stateMachine As MoveStateMachine)
  overload: Monologist.PlayerCharacter.Movement.IdleState.#ctor*
  nameWithType.vb: IdleState.New(MoveStateMachine)
  fullName.vb: Monologist.PlayerCharacter.Movement.IdleState.New(Monologist.PlayerCharacter.Movement.MoveStateMachine)
  name.vb: New(MoveStateMachine)
- uid: Monologist.PlayerCharacter.Movement.IdleState.OnEnter
  commentId: M:Monologist.PlayerCharacter.Movement.IdleState.OnEnter
  id: OnEnter
  parent: Monologist.PlayerCharacter.Movement.IdleState
  langs:
  - csharp
  - vb
  name: OnEnter()
  nameWithType: IdleState.OnEnter()
  fullName: Monologist.PlayerCharacter.Movement.IdleState.OnEnter()
  type: Method
  source:
    remote:
      path: Assets/Scripts/PlayerCharacter/Scripts/Movement/States/OnGroundState/IdleState.cs
      branch: feature/basic_movement
      repo: git@github.com:MonologistGames/Bartender.git
    id: OnEnter
    path: ../Assets/Scripts/PlayerCharacter/Scripts/Movement/States/OnGroundState/IdleState.cs
    startLine: 8
  assemblies:
  - Monologist.PlayerCharacter
  namespace: Monologist.PlayerCharacter.Movement
  syntax:
    content: public override void OnEnter()
    content.vb: Public Overrides Sub OnEnter()
  overridden: Bartender.GameLogic.PlayerCharacter.Movement.States.MovementState.OnEnter
  overload: Monologist.PlayerCharacter.Movement.IdleState.OnEnter*
- uid: Monologist.PlayerCharacter.Movement.IdleState.Update
  commentId: M:Monologist.PlayerCharacter.Movement.IdleState.Update
  id: Update
  parent: Monologist.PlayerCharacter.Movement.IdleState
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: IdleState.Update()
  fullName: Monologist.PlayerCharacter.Movement.IdleState.Update()
  type: Method
  source:
    remote:
      path: Assets/Scripts/PlayerCharacter/Scripts/Movement/States/OnGroundState/IdleState.cs
      branch: feature/basic_movement
      repo: git@github.com:MonologistGames/Bartender.git
    id: Update
    path: ../Assets/Scripts/PlayerCharacter/Scripts/Movement/States/OnGroundState/IdleState.cs
    startLine: 12
  assemblies:
  - Monologist.PlayerCharacter
  namespace: Monologist.PlayerCharacter.Movement
  syntax:
    content: public override void Update()
    content.vb: Public Overrides Sub Update()
  overridden: Monologist.PlayerCharacter.Movement.GroundedState.Update
  overload: Monologist.PlayerCharacter.Movement.IdleState.Update*
references:
- uid: Monologist.PlayerCharacter.Movement
  commentId: N:Monologist.PlayerCharacter.Movement
  name: Monologist.PlayerCharacter.Movement
  nameWithType: Monologist.PlayerCharacter.Movement
  fullName: Monologist.PlayerCharacter.Movement
  spec.csharp:
  - uid: Monologist
    name: Monologist
  - name: .
  - uid: Monologist.PlayerCharacter
    name: PlayerCharacter
  - name: .
  - uid: Monologist.PlayerCharacter.Movement
    name: Movement
  spec.vb:
  - uid: Monologist
    name: Monologist
  - name: .
  - uid: Monologist.PlayerCharacter
    name: PlayerCharacter
  - name: .
  - uid: Monologist.PlayerCharacter.Movement
    name: Movement
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Bartender.GameLogic.PlayerCharacter.Movement.States.MovementState
  commentId: T:Bartender.GameLogic.PlayerCharacter.Movement.States.MovementState
  parent: Bartender.GameLogic.PlayerCharacter.Movement.States
  name: MovementState
  nameWithType: MovementState
  fullName: Bartender.GameLogic.PlayerCharacter.Movement.States.MovementState
- uid: Monologist.PlayerCharacter.Movement.GroundedState
  commentId: T:Monologist.PlayerCharacter.Movement.GroundedState
  parent: Monologist.PlayerCharacter.Movement
  name: GroundedState
  nameWithType: GroundedState
  fullName: Monologist.PlayerCharacter.Movement.GroundedState
- uid: Monologist.Patterns.State.IState
  commentId: T:Monologist.Patterns.State.IState
  parent: Monologist.Patterns.State
  name: IState
  nameWithType: IState
  fullName: Monologist.Patterns.State.IState
- uid: Monologist.PlayerCharacter.Movement.GroundedState.BindInputActions
  commentId: M:Monologist.PlayerCharacter.Movement.GroundedState.BindInputActions
  parent: Monologist.PlayerCharacter.Movement.GroundedState
  name: BindInputActions()
  nameWithType: GroundedState.BindInputActions()
  fullName: Monologist.PlayerCharacter.Movement.GroundedState.BindInputActions()
  spec.csharp:
  - uid: Monologist.PlayerCharacter.Movement.GroundedState.BindInputActions
    name: BindInputActions
  - name: (
  - name: )
  spec.vb:
  - uid: Monologist.PlayerCharacter.Movement.GroundedState.BindInputActions
    name: BindInputActions
  - name: (
  - name: )
- uid: Monologist.PlayerCharacter.Movement.GroundedState.CancelInputActions
  commentId: M:Monologist.PlayerCharacter.Movement.GroundedState.CancelInputActions
  parent: Monologist.PlayerCharacter.Movement.GroundedState
  name: CancelInputActions()
  nameWithType: GroundedState.CancelInputActions()
  fullName: Monologist.PlayerCharacter.Movement.GroundedState.CancelInputActions()
  spec.csharp:
  - uid: Monologist.PlayerCharacter.Movement.GroundedState.CancelInputActions
    name: CancelInputActions
  - name: (
  - name: )
  spec.vb:
  - uid: Monologist.PlayerCharacter.Movement.GroundedState.CancelInputActions
    name: CancelInputActions
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Bartender.GameLogic.PlayerCharacter.Movement.States
  commentId: N:Bartender.GameLogic.PlayerCharacter.Movement.States
  name: Bartender.GameLogic.PlayerCharacter.Movement.States
  nameWithType: Bartender.GameLogic.PlayerCharacter.Movement.States
  fullName: Bartender.GameLogic.PlayerCharacter.Movement.States
  spec.csharp:
  - uid: Bartender
    name: Bartender
  - name: .
  - uid: Bartender.GameLogic
    name: GameLogic
  - name: .
  - uid: Bartender.GameLogic.PlayerCharacter
    name: PlayerCharacter
  - name: .
  - uid: Bartender.GameLogic.PlayerCharacter.Movement
    name: Movement
  - name: .
  - uid: Bartender.GameLogic.PlayerCharacter.Movement.States
    name: States
  spec.vb:
  - uid: Bartender
    name: Bartender
  - name: .
  - uid: Bartender.GameLogic
    name: GameLogic
  - name: .
  - uid: Bartender.GameLogic.PlayerCharacter
    name: PlayerCharacter
  - name: .
  - uid: Bartender.GameLogic.PlayerCharacter.Movement
    name: Movement
  - name: .
  - uid: Bartender.GameLogic.PlayerCharacter.Movement.States
    name: States
- uid: Monologist.Patterns.State
  commentId: N:Monologist.Patterns.State
  name: Monologist.Patterns.State
  nameWithType: Monologist.Patterns.State
  fullName: Monologist.Patterns.State
  spec.csharp:
  - uid: Monologist
    name: Monologist
  - name: .
  - uid: Monologist.Patterns
    name: Patterns
  - name: .
  - uid: Monologist.Patterns.State
    name: State
  spec.vb:
  - uid: Monologist
    name: Monologist
  - name: .
  - uid: Monologist.Patterns
    name: Patterns
  - name: .
  - uid: Monologist.Patterns.State
    name: State
- uid: Monologist.PlayerCharacter.Movement.IdleState.#ctor*
  commentId: Overload:Monologist.PlayerCharacter.Movement.IdleState.#ctor
  name: IdleState
  nameWithType: IdleState.IdleState
  fullName: Monologist.PlayerCharacter.Movement.IdleState.IdleState
  nameWithType.vb: IdleState.New
  fullName.vb: Monologist.PlayerCharacter.Movement.IdleState.New
  name.vb: New
- uid: Monologist.PlayerCharacter.Movement.MoveStateMachine
  commentId: T:Monologist.PlayerCharacter.Movement.MoveStateMachine
  parent: Monologist.PlayerCharacter.Movement
  name: MoveStateMachine
  nameWithType: MoveStateMachine
  fullName: Monologist.PlayerCharacter.Movement.MoveStateMachine
- uid: Bartender.GameLogic.PlayerCharacter.Movement.States.MovementState.OnEnter
  commentId: M:Bartender.GameLogic.PlayerCharacter.Movement.States.MovementState.OnEnter
  parent: Bartender.GameLogic.PlayerCharacter.Movement.States.MovementState
  name: OnEnter()
  nameWithType: MovementState.OnEnter()
  fullName: Bartender.GameLogic.PlayerCharacter.Movement.States.MovementState.OnEnter()
  spec.csharp:
  - uid: Bartender.GameLogic.PlayerCharacter.Movement.States.MovementState.OnEnter
    name: OnEnter
  - name: (
  - name: )
  spec.vb:
  - uid: Bartender.GameLogic.PlayerCharacter.Movement.States.MovementState.OnEnter
    name: OnEnter
  - name: (
  - name: )
- uid: Monologist.PlayerCharacter.Movement.IdleState.OnEnter*
  commentId: Overload:Monologist.PlayerCharacter.Movement.IdleState.OnEnter
  name: OnEnter
  nameWithType: IdleState.OnEnter
  fullName: Monologist.PlayerCharacter.Movement.IdleState.OnEnter
- uid: Monologist.PlayerCharacter.Movement.GroundedState.Update
  commentId: M:Monologist.PlayerCharacter.Movement.GroundedState.Update
  parent: Monologist.PlayerCharacter.Movement.GroundedState
  name: Update()
  nameWithType: GroundedState.Update()
  fullName: Monologist.PlayerCharacter.Movement.GroundedState.Update()
  spec.csharp:
  - uid: Monologist.PlayerCharacter.Movement.GroundedState.Update
    name: Update
  - name: (
  - name: )
  spec.vb:
  - uid: Monologist.PlayerCharacter.Movement.GroundedState.Update
    name: Update
  - name: (
  - name: )
- uid: Monologist.PlayerCharacter.Movement.IdleState.Update*
  commentId: Overload:Monologist.PlayerCharacter.Movement.IdleState.Update
  name: Update
  nameWithType: IdleState.Update
  fullName: Monologist.PlayerCharacter.Movement.IdleState.Update
