### YamlMime:ManagedReference
items:
- uid: Monologist.PlayerCharacter.WalkData
  commentId: T:Monologist.PlayerCharacter.WalkData
  id: WalkData
  parent: Monologist.PlayerCharacter
  children:
  - Monologist.PlayerCharacter.WalkData.acceleration
  - Monologist.PlayerCharacter.WalkData.deceleration
  - Monologist.PlayerCharacter.WalkData.maxMoveSpeed
  - Monologist.PlayerCharacter.WalkData.rotateSpeed
  - Monologist.PlayerCharacter.WalkData.turningAcceleration
  langs:
  - csharp
  - vb
  name: WalkData
  nameWithType: WalkData
  fullName: Monologist.PlayerCharacter.WalkData
  type: Class
  source:
    remote:
      path: Assets/Scripts/PlayerCharacter/Scripts/PlayerControllerData.cs
      branch: feature/basic_movement
      repo: git@github.com:MonologistGames/Bartender.git
    id: WalkData
    path: ../Assets/Scripts/PlayerCharacter/Scripts/PlayerControllerData.cs
    startLine: 16
  assemblies:
  - Monologist.PlayerCharacter
  namespace: Monologist.PlayerCharacter
  syntax:
    content: >-
      [Serializable]

      public class WalkData
    content.vb: >-
      <Serializable>

      Public Class WalkData
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
- uid: Monologist.PlayerCharacter.WalkData.maxMoveSpeed
  commentId: F:Monologist.PlayerCharacter.WalkData.maxMoveSpeed
  id: maxMoveSpeed
  parent: Monologist.PlayerCharacter.WalkData
  langs:
  - csharp
  - vb
  name: maxMoveSpeed
  nameWithType: WalkData.maxMoveSpeed
  fullName: Monologist.PlayerCharacter.WalkData.maxMoveSpeed
  type: Field
  source:
    remote:
      path: Assets/Scripts/PlayerCharacter/Scripts/PlayerControllerData.cs
      branch: feature/basic_movement
      repo: git@github.com:MonologistGames/Bartender.git
    id: maxMoveSpeed
    path: ../Assets/Scripts/PlayerCharacter/Scripts/PlayerControllerData.cs
    startLine: 19
  assemblies:
  - Monologist.PlayerCharacter
  namespace: Monologist.PlayerCharacter
  syntax:
    content: >-
      [Min(0.1)]

      public float maxMoveSpeed
    return:
      type: System.Single
    content.vb: >-
      <Min(0.1)>

      Public maxMoveSpeed As Single
  attributes:
  - type: UnityEngine.MinAttribute
    ctor: UnityEngine.MinAttribute.#ctor(System.Single)
    arguments:
    - type: System.Single
      value: 0.1
- uid: Monologist.PlayerCharacter.WalkData.acceleration
  commentId: F:Monologist.PlayerCharacter.WalkData.acceleration
  id: acceleration
  parent: Monologist.PlayerCharacter.WalkData
  langs:
  - csharp
  - vb
  name: acceleration
  nameWithType: WalkData.acceleration
  fullName: Monologist.PlayerCharacter.WalkData.acceleration
  type: Field
  source:
    remote:
      path: Assets/Scripts/PlayerCharacter/Scripts/PlayerControllerData.cs
      branch: feature/basic_movement
      repo: git@github.com:MonologistGames/Bartender.git
    id: acceleration
    path: ../Assets/Scripts/PlayerCharacter/Scripts/PlayerControllerData.cs
    startLine: 20
  assemblies:
  - Monologist.PlayerCharacter
  namespace: Monologist.PlayerCharacter
  syntax:
    content: >-
      [Min(0.1)]

      public float acceleration
    return:
      type: System.Single
    content.vb: >-
      <Min(0.1)>

      Public acceleration As Single
  attributes:
  - type: UnityEngine.MinAttribute
    ctor: UnityEngine.MinAttribute.#ctor(System.Single)
    arguments:
    - type: System.Single
      value: 0.1
- uid: Monologist.PlayerCharacter.WalkData.turningAcceleration
  commentId: F:Monologist.PlayerCharacter.WalkData.turningAcceleration
  id: turningAcceleration
  parent: Monologist.PlayerCharacter.WalkData
  langs:
  - csharp
  - vb
  name: turningAcceleration
  nameWithType: WalkData.turningAcceleration
  fullName: Monologist.PlayerCharacter.WalkData.turningAcceleration
  type: Field
  source:
    remote:
      path: Assets/Scripts/PlayerCharacter/Scripts/PlayerControllerData.cs
      branch: feature/basic_movement
      repo: git@github.com:MonologistGames/Bartender.git
    id: turningAcceleration
    path: ../Assets/Scripts/PlayerCharacter/Scripts/PlayerControllerData.cs
    startLine: 21
  assemblies:
  - Monologist.PlayerCharacter
  namespace: Monologist.PlayerCharacter
  syntax:
    content: >-
      [Min(0.1)]

      public float turningAcceleration
    return:
      type: System.Single
    content.vb: >-
      <Min(0.1)>

      Public turningAcceleration As Single
  attributes:
  - type: UnityEngine.MinAttribute
    ctor: UnityEngine.MinAttribute.#ctor(System.Single)
    arguments:
    - type: System.Single
      value: 0.1
- uid: Monologist.PlayerCharacter.WalkData.deceleration
  commentId: F:Monologist.PlayerCharacter.WalkData.deceleration
  id: deceleration
  parent: Monologist.PlayerCharacter.WalkData
  langs:
  - csharp
  - vb
  name: deceleration
  nameWithType: WalkData.deceleration
  fullName: Monologist.PlayerCharacter.WalkData.deceleration
  type: Field
  source:
    remote:
      path: Assets/Scripts/PlayerCharacter/Scripts/PlayerControllerData.cs
      branch: feature/basic_movement
      repo: git@github.com:MonologistGames/Bartender.git
    id: deceleration
    path: ../Assets/Scripts/PlayerCharacter/Scripts/PlayerControllerData.cs
    startLine: 22
  assemblies:
  - Monologist.PlayerCharacter
  namespace: Monologist.PlayerCharacter
  syntax:
    content: >-
      [Min(0.1)]

      public float deceleration
    return:
      type: System.Single
    content.vb: >-
      <Min(0.1)>

      Public deceleration As Single
  attributes:
  - type: UnityEngine.MinAttribute
    ctor: UnityEngine.MinAttribute.#ctor(System.Single)
    arguments:
    - type: System.Single
      value: 0.1
- uid: Monologist.PlayerCharacter.WalkData.rotateSpeed
  commentId: F:Monologist.PlayerCharacter.WalkData.rotateSpeed
  id: rotateSpeed
  parent: Monologist.PlayerCharacter.WalkData
  langs:
  - csharp
  - vb
  name: rotateSpeed
  nameWithType: WalkData.rotateSpeed
  fullName: Monologist.PlayerCharacter.WalkData.rotateSpeed
  type: Field
  source:
    remote:
      path: Assets/Scripts/PlayerCharacter/Scripts/PlayerControllerData.cs
      branch: feature/basic_movement
      repo: git@github.com:MonologistGames/Bartender.git
    id: rotateSpeed
    path: ../Assets/Scripts/PlayerCharacter/Scripts/PlayerControllerData.cs
    startLine: 24
  assemblies:
  - Monologist.PlayerCharacter
  namespace: Monologist.PlayerCharacter
  syntax:
    content: >-
      [Tooltip("How fast the character rotates to target direction.")]

      [Range(1, 0)]

      public float rotateSpeed
    return:
      type: System.Single
    content.vb: >-
      <Tooltip("How fast the character rotates to target direction.")>

      <Range(1, 0)>

      Public rotateSpeed As Single
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: How fast the character rotates to target direction.
  - type: UnityEngine.RangeAttribute
    ctor: UnityEngine.RangeAttribute.#ctor(System.Single,System.Single)
    arguments:
    - type: System.Single
      value: 1
    - type: System.Single
      value: 0
references:
- uid: Monologist.PlayerCharacter
  commentId: N:Monologist.PlayerCharacter
  name: Monologist.PlayerCharacter
  nameWithType: Monologist.PlayerCharacter
  fullName: Monologist.PlayerCharacter
  spec.csharp:
  - uid: Monologist
    name: Monologist
  - name: .
  - uid: Monologist.PlayerCharacter
    name: PlayerCharacter
  spec.vb:
  - uid: Monologist
    name: Monologist
  - name: .
  - uid: Monologist.PlayerCharacter
    name: PlayerCharacter
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
