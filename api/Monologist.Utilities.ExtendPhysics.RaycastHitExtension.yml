### YamlMime:ManagedReference
items:
- uid: Monologist.Utilities.ExtendPhysics.RaycastHitExtension
  commentId: T:Monologist.Utilities.ExtendPhysics.RaycastHitExtension
  id: RaycastHitExtension
  parent: Monologist.Utilities.ExtendPhysics
  children:
  - Monologist.Utilities.ExtendPhysics.RaycastHitExtension.CorrectHitNormal(UnityEngine.RaycastHit,UnityEngine.Vector3)
  langs:
  - csharp
  - vb
  name: RaycastHitExtension
  nameWithType: RaycastHitExtension
  fullName: Monologist.Utilities.ExtendPhysics.RaycastHitExtension
  type: Class
  source:
    remote:
      path: Assets/Scripts/Utilities/ExtendPhysics/RaycastHitExtension.cs
      branch: feature/basic_movement
      repo: git@github.com:MonologistGames/Bartender.git
    id: RaycastHitExtension
    path: ../Bartender/Assets/Scripts/Utilities/ExtendPhysics/RaycastHitExtension.cs
    startLine: 6
  assemblies:
  - Monologist.Utilities
  namespace: Monologist.Utilities.ExtendPhysics
  syntax:
    content: public static class RaycastHitExtension
    content.vb: Public Module RaycastHitExtension
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Monologist.Utilities.ExtendPhysics.RaycastHitExtension.CorrectHitNormal(UnityEngine.RaycastHit,UnityEngine.Vector3)
  commentId: M:Monologist.Utilities.ExtendPhysics.RaycastHitExtension.CorrectHitNormal(UnityEngine.RaycastHit,UnityEngine.Vector3)
  id: CorrectHitNormal(UnityEngine.RaycastHit,UnityEngine.Vector3)
  isExtensionMethod: true
  parent: Monologist.Utilities.ExtendPhysics.RaycastHitExtension
  langs:
  - csharp
  - vb
  name: CorrectHitNormal(RaycastHit, Vector3)
  nameWithType: RaycastHitExtension.CorrectHitNormal(RaycastHit, Vector3)
  fullName: Monologist.Utilities.ExtendPhysics.RaycastHitExtension.CorrectHitNormal(UnityEngine.RaycastHit, UnityEngine.Vector3)
  type: Method
  source:
    remote:
      path: Assets/Scripts/Utilities/ExtendPhysics/RaycastHitExtension.cs
      branch: feature/basic_movement
      repo: git@github.com:MonologistGames/Bartender.git
    id: CorrectHitNormal
    path: ../Bartender/Assets/Scripts/Utilities/ExtendPhysics/RaycastHitExtension.cs
    startLine: 15
  assemblies:
  - Monologist.Utilities
  namespace: Monologist.Utilities.ExtendPhysics
  summary: "\nCorrect a surface normal hit by a sphere/capsule cast.\n"
  example: []
  syntax:
    content: public static Vector3 CorrectHitNormal(this RaycastHit hit, Vector3 direction)
    parameters:
    - id: hit
      type: UnityEngine.RaycastHit
      description: RaycastHit returned by sphere/capsule cast.
    - id: direction
      type: UnityEngine.Vector3
      description: Original raycast direction.
    return:
      type: UnityEngine.Vector3
    content.vb: Public Shared Function CorrectHitNormal(hit As RaycastHit, direction As Vector3) As Vector3
  overload: Monologist.Utilities.ExtendPhysics.RaycastHitExtension.CorrectHitNormal*
references:
- uid: Monologist.Utilities.ExtendPhysics
  commentId: N:Monologist.Utilities.ExtendPhysics
  name: Monologist.Utilities.ExtendPhysics
  nameWithType: Monologist.Utilities.ExtendPhysics
  fullName: Monologist.Utilities.ExtendPhysics
  spec.csharp:
  - uid: Monologist
    name: Monologist
  - name: .
  - uid: Monologist.Utilities
    name: Utilities
  - name: .
  - uid: Monologist.Utilities.ExtendPhysics
    name: ExtendPhysics
  spec.vb:
  - uid: Monologist
    name: Monologist
  - name: .
  - uid: Monologist.Utilities
    name: Utilities
  - name: .
  - uid: Monologist.Utilities.ExtendPhysics
    name: ExtendPhysics
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Monologist.Utilities.ExtendPhysics.RaycastHitExtension.CorrectHitNormal*
  commentId: Overload:Monologist.Utilities.ExtendPhysics.RaycastHitExtension.CorrectHitNormal
  name: CorrectHitNormal
  nameWithType: RaycastHitExtension.CorrectHitNormal
  fullName: Monologist.Utilities.ExtendPhysics.RaycastHitExtension.CorrectHitNormal
- uid: UnityEngine.RaycastHit
  commentId: T:UnityEngine.RaycastHit
  parent: UnityEngine
  isExternal: true
  name: RaycastHit
  nameWithType: RaycastHit
  fullName: UnityEngine.RaycastHit
- uid: UnityEngine.Vector3
  commentId: T:UnityEngine.Vector3
  parent: UnityEngine
  isExternal: true
  name: Vector3
  nameWithType: Vector3
  fullName: UnityEngine.Vector3
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
